import { type InternalOperationsDefinition, startServer } from '@fireboom/server'
import { hookServerConfiguration } from './hook.config'
import type { {{> operation_partial operations=operations includeInternal=true includeResponse=true includeInput=false }} } from './models'

export type Queries = {
  {{~#each operations}}{{#if isQuery}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}InternalInput{{else}}undefined{{/if}}
    response: {{name}}Response
  }{{#unless @last}},{{/unless}}{{/if}}
  {{~/each}}

}

export type Mutations = {
  {{~#each operations}}{{#if isMutation}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}InternalInput{{else}}undefined{{/if}}
    response: {{name}}Response
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type Subscriptions = {
  {{~#each operations}}{{#if isSubscription}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}InternalInput{{else}}undefined{{/if}}
    response: {{name}}Response
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type LiveQueries = {
  {{~#each operations}}{{#if (isAllTrue isQuery isLiveQuery)}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}InternalInput{{else}}undefined{{/if}}
    response: {{name}}Response
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type FireboomOperationsDefinition = InternalOperationsDefinition<Queries, Mutations, Subscriptions>

startServer(hookServerConfiguration)
