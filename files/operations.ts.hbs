import { type InternalOperationsDefinition, type BaseRequestContext } from '@fireboom/server'
import type { {{> import_partial operations=operations }} } from './models'

export type Queries = {
  {{~#each operations}}{{#if isQuery}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}{{#if hasInternalInput}}Internal{{/if}}Input{{else}}undefined{{/if}}
    response: {{#if (equalAny engine 2)}}any{{else}}{{name}}Response{{/if}}
  }{{#unless @last}},{{/unless}}{{/if}}
  {{~/each}}

}

export type Mutations = {
  {{~#each operations}}{{#if isMutation}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}{{#if hasInternalInput}}Internal{{/if}}Input{{else}}undefined{{/if}}
    response: {{#if (equalAny engine 2)}}any{{else}}{{name}}Response{{/if}}
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type Subscriptions = {
  {{~#each operations}}{{#if (isAnyTrue isSubscription (isAllTrue isQuery isLiveQuery))}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}{{#if hasInternalInput}}Internal{{/if}}Input{{else}}undefined{{/if}}
    response: {{#if (equalAny engine 2)}}any{{else}}{{name}}Response{{/if}}
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type LiveQueries = {
  {{~#each operations}}{{#if (isAllTrue isQuery isLiveQuery)}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}{{#if hasInternalInput}}Internal{{/if}}Input{{else}}undefined{{/if}}
    response: {{#if (equalAny engine 2)}}any{{else}}{{name}}Response{{/if}}
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type FireboomOperationsDefinition = InternalOperationsDefinition<Queries, Mutations, Subscriptions>

export type FireboomRequestContext = BaseRequestContext<FireboomOperationsDefinition>
